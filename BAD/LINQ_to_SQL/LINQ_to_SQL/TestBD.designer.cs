#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQ_to_SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestBD")]
	public partial class TestBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertT_Clients(T_Clients instance);
    partial void UpdateT_Clients(T_Clients instance);
    partial void DeleteT_Clients(T_Clients instance);
    partial void InsertT_Commandes(T_Commandes instance);
    partial void UpdateT_Commandes(T_Commandes instance);
    partial void DeleteT_Commandes(T_Commandes instance);
    #endregion
		
		public TestBDDataContext() : 
				base(global::LINQ_to_SQL.Properties.Settings.Default.TestBDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TestBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_Clients> T_Clients
		{
			get
			{
				return this.GetTable<T_Clients>();
			}
		}
		
		public System.Data.Linq.Table<T_Commandes> T_Commandes
		{
			get
			{
				return this.GetTable<T_Commandes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Clients")]
	public partial class T_Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClient;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Adresse;
		
		private string _Localite;
		
		private string _CodePostal;
		
		private EntitySet<T_Commandes> _T_Commandes;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnLocaliteChanging(string value);
    partial void OnLocaliteChanged();
    partial void OnCodePostalChanging(string value);
    partial void OnCodePostalChanged();
    #endregion
		
		public T_Clients()
		{
			this._T_Commandes = new EntitySet<T_Commandes>(new Action<T_Commandes>(this.attach_T_Commandes), new Action<T_Commandes>(this.detach_T_Commandes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(20)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(20)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(100)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localite", DbType="VarChar(50)")]
		public string Localite
		{
			get
			{
				return this._Localite;
			}
			set
			{
				if ((this._Localite != value))
				{
					this.OnLocaliteChanging(value);
					this.SendPropertyChanging();
					this._Localite = value;
					this.SendPropertyChanged("Localite");
					this.OnLocaliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePostal", DbType="VarChar(7)")]
		public string CodePostal
		{
			get
			{
				return this._CodePostal;
			}
			set
			{
				if ((this._CodePostal != value))
				{
					this.OnCodePostalChanging(value);
					this.SendPropertyChanging();
					this._CodePostal = value;
					this.SendPropertyChanged("CodePostal");
					this.OnCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Clients_T_Commandes", Storage="_T_Commandes", ThisKey="IdClient", OtherKey="IdClient")]
		public EntitySet<T_Commandes> T_Commandes
		{
			get
			{
				return this._T_Commandes;
			}
			set
			{
				this._T_Commandes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_Commandes(T_Commandes entity)
		{
			this.SendPropertyChanging();
			entity.T_Clients = this;
		}
		
		private void detach_T_Commandes(T_Commandes entity)
		{
			this.SendPropertyChanging();
			entity.T_Clients = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Commandes")]
	public partial class T_Commandes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCommande;
		
		private System.Nullable<System.DateTime> _DateCommande;
		
		private string _Reference;
		
		private System.Nullable<int> _IdClient;
		
		private EntityRef<T_Clients> _T_Clients;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCommandeChanging(int value);
    partial void OnIdCommandeChanged();
    partial void OnDateCommandeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommandeChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnIdClientChanging(System.Nullable<int> value);
    partial void OnIdClientChanged();
    #endregion
		
		public T_Commandes()
		{
			this._T_Clients = default(EntityRef<T_Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCommande", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCommande
		{
			get
			{
				return this._IdCommande;
			}
			set
			{
				if ((this._IdCommande != value))
				{
					this.OnIdCommandeChanging(value);
					this.SendPropertyChanging();
					this._IdCommande = value;
					this.SendPropertyChanged("IdCommande");
					this.OnIdCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommande", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCommande
		{
			get
			{
				return this._DateCommande;
			}
			set
			{
				if ((this._DateCommande != value))
				{
					this.OnDateCommandeChanging(value);
					this.SendPropertyChanging();
					this._DateCommande = value;
					this.SendPropertyChanged("DateCommande");
					this.OnDateCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(20)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int")]
		public System.Nullable<int> IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._T_Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Clients_T_Commandes", Storage="_T_Clients", ThisKey="IdClient", OtherKey="IdClient", IsForeignKey=true)]
		public T_Clients T_Clients
		{
			get
			{
				return this._T_Clients.Entity;
			}
			set
			{
				T_Clients previousValue = this._T_Clients.Entity;
				if (((previousValue != value) 
							|| (this._T_Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Clients.Entity = null;
						previousValue.T_Commandes.Remove(this);
					}
					this._T_Clients.Entity = value;
					if ((value != null))
					{
						value.T_Commandes.Add(this);
						this._IdClient = value.IdClient;
					}
					else
					{
						this._IdClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
